name: Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck bats

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          # Install or upgrade dependencies
          brew list shellcheck &>/dev/null || brew install shellcheck
          brew list bats-core &>/dev/null || brew install bats-core
          brew list coreutils &>/dev/null || brew install coreutils
          brew list findutils &>/dev/null || brew install findutils

      - name: Run shellcheck on install.sh
        run: shellcheck install.sh

      - name: Run shellcheck on uninstall.sh
        run: shellcheck uninstall.sh

      - name: Run shellcheck on test helpers
        run: shellcheck tests/helpers.bash

      - name: Make scripts executable
        run: chmod +x symlinkit

      - name: Run tests
        run: make test

      - name: Verify version matches
        run: |
          version=$(grep '^VERSION=' symlinkit | cut -d'"' -f2)
          man_version=$(grep '^\.TH SYMLINKIT' man/symlinkit.1 | cut -d'"' -f4)
          if [ "$version" != "$man_version" ]; then
            echo "Version mismatch: symlinkit=$version, man page=$man_version"
            exit 1
          fi
          echo "Version check passed: $version"
